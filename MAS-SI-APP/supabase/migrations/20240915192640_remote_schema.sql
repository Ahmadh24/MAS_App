drop policy "Enable read access for all users" on "public"."sheikh_data";

revoke delete on table "public"."sheikh_data" from "anon";

revoke insert on table "public"."sheikh_data" from "anon";

revoke references on table "public"."sheikh_data" from "anon";

revoke select on table "public"."sheikh_data" from "anon";

revoke trigger on table "public"."sheikh_data" from "anon";

revoke truncate on table "public"."sheikh_data" from "anon";

revoke update on table "public"."sheikh_data" from "anon";

revoke delete on table "public"."sheikh_data" from "authenticated";

revoke insert on table "public"."sheikh_data" from "authenticated";

revoke references on table "public"."sheikh_data" from "authenticated";

revoke select on table "public"."sheikh_data" from "authenticated";

revoke trigger on table "public"."sheikh_data" from "authenticated";

revoke truncate on table "public"."sheikh_data" from "authenticated";

revoke update on table "public"."sheikh_data" from "authenticated";

revoke delete on table "public"."sheikh_data" from "service_role";

revoke insert on table "public"."sheikh_data" from "service_role";

revoke references on table "public"."sheikh_data" from "service_role";

revoke select on table "public"."sheikh_data" from "service_role";

revoke trigger on table "public"."sheikh_data" from "service_role";

revoke truncate on table "public"."sheikh_data" from "service_role";

revoke update on table "public"."sheikh_data" from "service_role";

alter table "public"."sheikh_data" drop constraint "sheikh_data_pkey";

drop index if exists "public"."sheikh_data_pkey";

drop table "public"."sheikh_data";

create table "public"."business_ads_submissions" (
    "id" bigint generated by default as identity not null,
    "personal_full_name" text,
    "personal_phone_number" text,
    "business_name" text,
    "business_address" text,
    "business_phone_number" text,
    "business_email" text,
    "business_flyer_duration" text,
    "business_flyer_location" text,
    "business_flyer_img" text,
    "created_at" timestamp with time zone not null default now(),
    "personal_email" text
);


alter table "public"."business_ads_submissions" enable row level security;

create table "public"."speaker_data" (
    "speaker_id" uuid not null default gen_random_uuid(),
    "speaker_name" text,
    "speaker_creds" text[],
    "speaker_img" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."speaker_data" enable row level security;

alter table "public"."user_cart" add column "product_price" real;

CREATE UNIQUE INDEX business_ads_submissions_pkey ON public.business_ads_submissions USING btree (id);

CREATE UNIQUE INDEX speaker_data_pkey ON public.speaker_data USING btree (speaker_id);

alter table "public"."business_ads_submissions" add constraint "business_ads_submissions_pkey" PRIMARY KEY using index "business_ads_submissions_pkey";

alter table "public"."speaker_data" add constraint "speaker_data_pkey" PRIMARY KEY using index "speaker_data_pkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.update_status_to_received()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
    UPDATE business_ads_submissions
    SET status = 'RECEIVED'
    WHERE created_at <= (NOW() - INTERVAL '4 hours')
    AND status == 'SUBMITTED';
END;
$function$
;

grant delete on table "public"."business_ads_submissions" to "anon";

grant insert on table "public"."business_ads_submissions" to "anon";

grant references on table "public"."business_ads_submissions" to "anon";

grant select on table "public"."business_ads_submissions" to "anon";

grant trigger on table "public"."business_ads_submissions" to "anon";

grant truncate on table "public"."business_ads_submissions" to "anon";

grant update on table "public"."business_ads_submissions" to "anon";

grant delete on table "public"."business_ads_submissions" to "authenticated";

grant insert on table "public"."business_ads_submissions" to "authenticated";

grant references on table "public"."business_ads_submissions" to "authenticated";

grant select on table "public"."business_ads_submissions" to "authenticated";

grant trigger on table "public"."business_ads_submissions" to "authenticated";

grant truncate on table "public"."business_ads_submissions" to "authenticated";

grant update on table "public"."business_ads_submissions" to "authenticated";

grant delete on table "public"."business_ads_submissions" to "service_role";

grant insert on table "public"."business_ads_submissions" to "service_role";

grant references on table "public"."business_ads_submissions" to "service_role";

grant select on table "public"."business_ads_submissions" to "service_role";

grant trigger on table "public"."business_ads_submissions" to "service_role";

grant truncate on table "public"."business_ads_submissions" to "service_role";

grant update on table "public"."business_ads_submissions" to "service_role";

grant delete on table "public"."speaker_data" to "anon";

grant insert on table "public"."speaker_data" to "anon";

grant references on table "public"."speaker_data" to "anon";

grant select on table "public"."speaker_data" to "anon";

grant trigger on table "public"."speaker_data" to "anon";

grant truncate on table "public"."speaker_data" to "anon";

grant update on table "public"."speaker_data" to "anon";

grant delete on table "public"."speaker_data" to "authenticated";

grant insert on table "public"."speaker_data" to "authenticated";

grant references on table "public"."speaker_data" to "authenticated";

grant select on table "public"."speaker_data" to "authenticated";

grant trigger on table "public"."speaker_data" to "authenticated";

grant truncate on table "public"."speaker_data" to "authenticated";

grant update on table "public"."speaker_data" to "authenticated";

grant delete on table "public"."speaker_data" to "service_role";

grant insert on table "public"."speaker_data" to "service_role";

grant references on table "public"."speaker_data" to "service_role";

grant select on table "public"."speaker_data" to "service_role";

grant trigger on table "public"."speaker_data" to "service_role";

grant truncate on table "public"."speaker_data" to "service_role";

grant update on table "public"."speaker_data" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."business_ads_submissions"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."speaker_data"
as permissive
for select
to public
using (true);



